{"ast":null,"code":"var _jsxFileName = \"/home/ruchazirpe/reactproject/ev-dashboard/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport CafvEligibilityChart from \"./Charts/CafvEligibilityChart\";\nimport ElectricRangeChart from \"./Charts/ElectricRangeChart\";\nimport ElectricRangeLineChart from \"./Charts/ElectricRangeLineChart\";\nimport CountryDistributionChart from \"./Charts/CountryDistributionChart\";\nimport VehicleAttributesRadarChart from \"./Charts/VehicleAttributesRadarChart\";\nimport RangeVsPriceChart from \"./Charts/RangeVsPriceChart\";\nimport data from \"../data/evData.json\"; // Assuming your data file is correctly placed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [filteredData, setFilteredData] = useState(data);\n  const filterDataByMake = make => {\n    const filtered = data.filter(vehicle => vehicle.Make === make);\n    setFilteredData(filtered);\n  };\n  const [makeCounts, setMakeCounts] = useState([]);\n  useEffect(() => {\n    // Count the occurrences of each make in the data\n    const counts = data.reduce((acc, vehicle) => {\n      acc[vehicle.Make] = acc[vehicle.Make] ? acc[vehicle.Make] + 1 : 1;\n      return acc;\n    }, {});\n\n    // Convert the counts into an array of objects\n    const makeCountArray = Object.keys(counts).map(make => ({\n      make,\n      count: counts[make]\n    }));\n    setMakeCounts(makeCountArray);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtersdas\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"filters-title\",\n          children: \"Filter by Vehicle Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-buttons flex flex-wrap justify-between gap-6 lg:gap-8 xl:gap-12\",\n          children: makeCounts.map(({\n            make,\n            count\n          }) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filters-btn flex items-center justify-center w-40 h-16 rounded-lg text-white font-medium shadow-md transition-all transform hover:scale-105 hover:shadow-lg focus:outline-none\",\n            onClick: () => filterDataByMake(make),\n            style: {\n              backgroundColor: getColorForMake(make)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-semibold\",\n              children: make\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-sm font-light\",\n              children: [\"(\", count, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 7\n            }, this)]\n          }, make, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(CafvEligibilityChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(ElectricRangeChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(ElectricRangeLineChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(CountryDistributionChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(VehicleAttributesRadarChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(RangeVsPriceChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"L9zaNJL2IuP786A4ssp2NOHoXPw=\");\n_c = Dashboard;\nconst getColorForMake = make => {\n  const colors = {\n    TESLA: '#e82127',\n    // Tesla Red\n    FORD: '#0033A0',\n    // Ford Blue\n    NISSAN: '#9f9f9f',\n    // Nissan Gray\n    KIA: '#1c1c1c',\n    // Kia Black\n    BMW: '#1e4f96',\n    // BMW Blue\n    CHEVROLET: '#0072ce' // Chevrolet Blue\n  };\n  return colors[make.toUpperCase()] || '#007bff';\n};\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CafvEligibilityChart","ElectricRangeChart","ElectricRangeLineChart","CountryDistributionChart","VehicleAttributesRadarChart","RangeVsPriceChart","data","jsxDEV","_jsxDEV","Dashboard","_s","filteredData","setFilteredData","filterDataByMake","make","filtered","filter","vehicle","Make","makeCounts","setMakeCounts","counts","reduce","acc","makeCountArray","Object","keys","map","count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","getColorForMake","_c","colors","TESLA","FORD","NISSAN","KIA","BMW","CHEVROLET","toUpperCase","$RefreshReg$"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useState,useEffect } from \"react\";\nimport CafvEligibilityChart from \"./Charts/CafvEligibilityChart\";\nimport ElectricRangeChart from \"./Charts/ElectricRangeChart\";\nimport ElectricRangeLineChart from \"./Charts/ElectricRangeLineChart\";\nimport CountryDistributionChart from \"./Charts/CountryDistributionChart\";\nimport VehicleAttributesRadarChart from \"./Charts/VehicleAttributesRadarChart\";\nimport RangeVsPriceChart from \"./Charts/RangeVsPriceChart\";\nimport data from \"../data/evData.json\"; // Assuming your data file is correctly placed\n\nconst Dashboard = () => {\n  const [filteredData, setFilteredData] = useState(data);\n\n  const filterDataByMake = (make) => {\n    const filtered = data.filter(vehicle => vehicle.Make === make);\n    setFilteredData(filtered);\n  };\n\n  const [makeCounts, setMakeCounts] = useState([]);\n\n  useEffect(() => {\n    // Count the occurrences of each make in the data\n    const counts = data.reduce((acc, vehicle) => {\n      acc[vehicle.Make] = acc[vehicle.Make] ? acc[vehicle.Make] + 1 : 1;\n      return acc;\n    }, {});\n\n    // Convert the counts into an array of objects\n    const makeCountArray = Object.keys(counts).map((make) => ({\n      make,\n      count: counts[make],\n    }));\n\n    setMakeCounts(makeCountArray);\n  }, [data]);\n  \n\n  return (\n    <div className=\"dashboard\">\n  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\">\n  <div className=\"filtersdas\">\n  <h3 className=\"filters-title\">Filter by Vehicle Make</h3>\n  <div className=\"filters-buttons flex flex-wrap justify-between gap-6 lg:gap-8 xl:gap-12\">\n  {makeCounts.map(({ make, count }) => (\n    <button\n      key={make}\n      className=\"filters-btn flex items-center justify-center w-40 h-16 rounded-lg text-white font-medium shadow-md transition-all transform hover:scale-105 hover:shadow-lg focus:outline-none\"\n      onClick={() => filterDataByMake(make)}\n      style={{ backgroundColor: getColorForMake(make) }}\n    >\n      <span className=\"text-lg font-semibold\">{make}</span>\n      <span className=\"ml-2 text-sm font-light\">({count})</span>\n    </button>\n  ))}\n</div>\n        </div>\n</div>\n<div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\">\n<div className=\"dashboard-container\">\n  <div className=\"chart-grid\">\n    <div className=\"chart-card\">\n      <CafvEligibilityChart data={filteredData} />\n    </div>\n    <div className=\"chart-card\">\n      <ElectricRangeChart data={filteredData} />\n    </div>\n    <div className=\"chart-card\">\n      <ElectricRangeLineChart data={filteredData} />\n    </div>\n    <div className=\"chart-card\">\n      <CountryDistributionChart data={filteredData} />\n    </div>\n    <div className=\"chart-card\">\n      <VehicleAttributesRadarChart data={filteredData} />\n    </div>\n    <div className=\"chart-card\">\n      <RangeVsPriceChart data={filteredData} />\n    </div>\n   \n  </div>\n</div>\n</div>\n\n\n\n    </div>\n  );\n};\n\n\nconst getColorForMake = (make) => {\n  const colors = {\n    TESLA: '#e82127',  // Tesla Red\n    FORD: '#0033A0',   // Ford Blue\n    NISSAN: '#9f9f9f',  // Nissan Gray\n    KIA: '#1c1c1c',     // Kia Black\n    BMW: '#1e4f96',     // BMW Blue\n    CHEVROLET: '#0072ce', // Chevrolet Blue\n    \n  };\n  \n  return colors[make.toUpperCase()] || '#007bff'; \n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,oBAAoB,MAAM,+BAA+B;AAChE,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,sBAAsB,MAAM,iCAAiC;AACpE,OAAOC,wBAAwB,MAAM,mCAAmC;AACxE,OAAOC,2BAA2B,MAAM,sCAAsC;AAC9E,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,IAAI,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACQ,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,IAAI,IAAK;IACjC,MAAMC,QAAQ,GAAGT,IAAI,CAACU,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKJ,IAAI,CAAC;IAC9DF,eAAe,CAACG,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,MAAM,GAAGf,IAAI,CAACgB,MAAM,CAAC,CAACC,GAAG,EAAEN,OAAO,KAAK;MAC3CM,GAAG,CAACN,OAAO,CAACC,IAAI,CAAC,GAAGK,GAAG,CAACN,OAAO,CAACC,IAAI,CAAC,GAAGK,GAAG,CAACN,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;MACjE,OAAOK,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,GAAG,CAAEb,IAAI,KAAM;MACxDA,IAAI;MACJc,KAAK,EAAEP,MAAM,CAACP,IAAI;IACpB,CAAC,CAAC,CAAC;IAEHM,aAAa,CAACI,cAAc,CAAC;EAC/B,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAGV,oBACEE,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC5BtB,OAAA;MAAKqB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,eAC3DtB,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BtB,OAAA;UAAIqB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzD1B,OAAA;UAAKqB,SAAS,EAAC,yEAAyE;UAAAC,QAAA,EACvFX,UAAU,CAACQ,GAAG,CAAC,CAAC;YAAEb,IAAI;YAAEc;UAAM,CAAC,kBAC9BpB,OAAA;YAEEqB,SAAS,EAAC,gLAAgL;YAC1LM,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACC,IAAI,CAAE;YACtCsB,KAAK,EAAE;cAAEC,eAAe,EAAEC,eAAe,CAACxB,IAAI;YAAE,CAAE;YAAAgB,QAAA,gBAElDtB,OAAA;cAAMqB,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAEhB;YAAI;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrD1B,OAAA;cAAMqB,SAAS,EAAC,yBAAyB;cAAAC,QAAA,GAAC,GAAC,EAACF,KAAK,EAAC,GAAC;YAAA;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GANrDpB,IAAI;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOH,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACN1B,OAAA;MAAKqB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,eAC3DtB,OAAA;QAAKqB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCtB,OAAA;UAAKqB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBtB,OAAA;YAAKqB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBtB,OAAA,CAACR,oBAAoB;cAACM,IAAI,EAAEK;YAAa;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACN1B,OAAA;YAAKqB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBtB,OAAA,CAACP,kBAAkB;cAACK,IAAI,EAAEK;YAAa;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACN1B,OAAA;YAAKqB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBtB,OAAA,CAACN,sBAAsB;cAACI,IAAI,EAAEK;YAAa;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACN1B,OAAA;YAAKqB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBtB,OAAA,CAACL,wBAAwB;cAACG,IAAI,EAAEK;YAAa;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACN1B,OAAA;YAAKqB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBtB,OAAA,CAACJ,2BAA2B;cAACE,IAAI,EAAEK;YAAa;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACN1B,OAAA;YAAKqB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBtB,OAAA,CAACH,iBAAiB;cAACC,IAAI,EAAEK;YAAa;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIG,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7EID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAgFf,MAAM6B,eAAe,GAAIxB,IAAI,IAAK;EAChC,MAAM0B,MAAM,GAAG;IACbC,KAAK,EAAE,SAAS;IAAG;IACnBC,IAAI,EAAE,SAAS;IAAI;IACnBC,MAAM,EAAE,SAAS;IAAG;IACpBC,GAAG,EAAE,SAAS;IAAM;IACpBC,GAAG,EAAE,SAAS;IAAM;IACpBC,SAAS,EAAE,SAAS,CAAE;EAExB,CAAC;EAED,OAAON,MAAM,CAAC1B,IAAI,CAACiC,WAAW,CAAC,CAAC,CAAC,IAAI,SAAS;AAChD,CAAC;AAED,eAAetC,SAAS;AAAC,IAAA8B,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}