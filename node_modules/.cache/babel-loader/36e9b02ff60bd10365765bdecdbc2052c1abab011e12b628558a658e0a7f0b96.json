{"ast":null,"code":"var _jsxFileName = \"/home/ruchazirpe/reactproject/ev-dashboard/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CafvEligibilityChart from \"./Charts/CafvEligibilityChart\";\nimport ElectricRangeChart from \"./Charts/ElectricRangeChart\";\nimport ElectricRangeLineChart from \"./Charts/ElectricRangeLineChart\";\nimport CountryDistributionChart from \"./Charts/CountryDistributionChart\";\nimport VehicleAttributesRadarChart from \"./Charts/VehicleAttributesRadarChart\";\nimport RangeVsPriceChart from \"./Charts/RangeVsPriceChart\";\nimport data from \"../data/evData.json\"; // Assuming your data file is correctly placed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [filteredData, setFilteredData] = useState(data);\n  const [makeCounts, setMakeCounts] = useState([]);\n\n  // Filter data by vehicle make\n  const filterDataByMake = make => {\n    const filtered = data.filter(vehicle => vehicle.Make === make);\n    setFilteredData(filtered);\n  };\n\n  // Count the occurrences of each make in the data (only once when the component is mounted)\n  useEffect(() => {\n    const counts = data.reduce((acc, vehicle) => {\n      acc[vehicle.Make] = acc[vehicle.Make] ? acc[vehicle.Make] + 1 : 1;\n      return acc;\n    }, {});\n    const makeCountArray = Object.keys(counts).map(make => ({\n      make,\n      count: counts[make]\n    }));\n    setMakeCounts(makeCountArray);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtersdas\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"filters-title\",\n          children: \"Filter by Vehicle Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-buttons flex flex-wrap justify-between gap-6 lg:gap-8 xl:gap-12\",\n          children: makeCounts.map(({\n            make,\n            count\n          }) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filters-btn flex items-center justify-center w-40 h-16 rounded-lg text-white font-medium shadow-md transition-all transform hover:scale-105 hover:shadow-lg focus:outline-none\",\n            onClick: () => filterDataByMake(make),\n            style: {\n              backgroundColor: getColorForMake(make)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-semibold\",\n              children: make\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-sm font-light\",\n              children: [\"(\", count, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, make, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(CafvEligibilityChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(ElectricRangeChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(ElectricRangeLineChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(CountryDistributionChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(VehicleAttributesRadarChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: /*#__PURE__*/_jsxDEV(RangeVsPriceChart, {\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to get color for each vehicle make\n_s(Dashboard, \"L9zaNJL2IuP786A4ssp2NOHoXPw=\");\n_c = Dashboard;\nconst getColorForMake = make => {\n  const colors = {\n    // Example colors (add more makes if needed)\n    TESLA: '#007bff',\n    BMW: '#007bff',\n    AUDI: '#007bff',\n    TOYOTA: '#007bff'\n  };\n  return colors[make.toUpperCase()] || '#007bff'; // Default to blue if no color found\n};\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CafvEligibilityChart","ElectricRangeChart","ElectricRangeLineChart","CountryDistributionChart","VehicleAttributesRadarChart","RangeVsPriceChart","data","jsxDEV","_jsxDEV","Dashboard","_s","filteredData","setFilteredData","makeCounts","setMakeCounts","filterDataByMake","make","filtered","filter","vehicle","Make","counts","reduce","acc","makeCountArray","Object","keys","map","count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","getColorForMake","_c","colors","TESLA","BMW","AUDI","TOYOTA","toUpperCase","$RefreshReg$"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CafvEligibilityChart from \"./Charts/CafvEligibilityChart\";\nimport ElectricRangeChart from \"./Charts/ElectricRangeChart\";\nimport ElectricRangeLineChart from \"./Charts/ElectricRangeLineChart\";\nimport CountryDistributionChart from \"./Charts/CountryDistributionChart\";\nimport VehicleAttributesRadarChart from \"./Charts/VehicleAttributesRadarChart\";\nimport RangeVsPriceChart from \"./Charts/RangeVsPriceChart\";\nimport data from \"../data/evData.json\"; // Assuming your data file is correctly placed\n\nconst Dashboard = () => {\n  const [filteredData, setFilteredData] = useState(data);\n  const [makeCounts, setMakeCounts] = useState([]);\n\n  // Filter data by vehicle make\n  const filterDataByMake = (make) => {\n    const filtered = data.filter(vehicle => vehicle.Make === make);\n    setFilteredData(filtered);\n  };\n\n  // Count the occurrences of each make in the data (only once when the component is mounted)\n  useEffect(() => {\n    const counts = data.reduce((acc, vehicle) => {\n      acc[vehicle.Make] = acc[vehicle.Make] ? acc[vehicle.Make] + 1 : 1;\n      return acc;\n    }, {});\n\n    const makeCountArray = Object.keys(counts).map((make) => ({\n      make,\n      count: counts[make],\n    }));\n\n    setMakeCounts(makeCountArray);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\">\n        <div className=\"filtersdas\">\n          <h3 className=\"filters-title\">Filter by Vehicle Make</h3>\n          <div className=\"filters-buttons flex flex-wrap justify-between gap-6 lg:gap-8 xl:gap-12\">\n            {makeCounts.map(({ make, count }) => (\n              <button\n                key={make}\n                className=\"filters-btn flex items-center justify-center w-40 h-16 rounded-lg text-white font-medium shadow-md transition-all transform hover:scale-105 hover:shadow-lg focus:outline-none\"\n                onClick={() => filterDataByMake(make)}\n                style={{ backgroundColor: getColorForMake(make) }}\n              >\n                <span className=\"text-lg font-semibold\">{make}</span>\n                <span className=\"ml-2 text-sm font-light\">({count})</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\">\n        <div className=\"dashboard-container\">\n          <div className=\"chart-grid\">\n            <div className=\"chart-card\">\n              <CafvEligibilityChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <ElectricRangeChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <ElectricRangeLineChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <CountryDistributionChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <VehicleAttributesRadarChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <RangeVsPriceChart data={filteredData} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Function to get color for each vehicle make\nconst getColorForMake = (make) => {\n  const colors = {\n    // Example colors (add more makes if needed)\n    TESLA: '#007bff',\n    BMW: '#007bff',\n    AUDI: '#007bff',\n    TOYOTA: '#007bff',\n  };\n\n  return colors[make.toUpperCase()] || '#007bff'; // Default to blue if no color found\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}