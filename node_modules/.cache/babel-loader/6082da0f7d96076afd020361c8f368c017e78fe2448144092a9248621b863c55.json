{"ast":null,"code":"import React from\"react\";import{Chart,registerables}from\"chart.js\";import{Bar}from\"react-chartjs-2\";// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(...registerables);const RangeChart=_ref=>{let{data}=_ref;const ranges=data.map(item=>item[\"Model Year\"]);// Group ranges into bins\nconst bins=[2005,2008,2011,2014,2017,2020,2023];const rangeCounts=bins.map((bin,index)=>ranges.filter(range=>{if(index===bins.length-1)return range>=bin;// Last bin includes all higher values\nreturn range>=bin&&range<bins[index+1];}).length);const chartData={labels:[\"2005-2008\",\"2008-2011\",\"2011-2014\",\"2014-2017\",\"2017-2020\",\"2020-2023\",\"2023+\"],datasets:[{label:\"Model Years\",data:rangeCounts,backgroundColor:\"#4caf50\"}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded shadow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Vehical Launch Year\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"570px\",height:\"285px\"},children:/*#__PURE__*/_jsx(Bar,{data:chartData})})]});};export default RangeChart;","map":{"version":3,"names":["React","Chart","registerables","Bar","jsx","_jsx","jsxs","_jsxs","register","RangeChart","_ref","data","ranges","map","item","bins","rangeCounts","bin","index","filter","range","length","chartData","labels","datasets","label","backgroundColor","className","children","style","width","height"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Charts/RangeChart.js"],"sourcesContent":["import React from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\n// Register Chart.js components\nChart.register(...registerables);\n\nconst RangeChart = ({ data }) => {\n  const ranges = data.map((item) => item[\"Model Year\"]);\n\n  // Group ranges into bins\n  const bins = [ 2005, 2008, 2011, 2014, 2017, 2020,2023];\n  const rangeCounts = bins.map((bin, index) =>\n    ranges.filter((range) => {\n      if (index === bins.length - 1) return range >= bin; // Last bin includes all higher values\n      return range >= bin && range < bins[index + 1];\n    }).length\n  );\n\n  const chartData = {\n    labels: [\"2005-2008\", \"2008-2011\", \"2011-2014\", \"2014-2017\", \"2017-2020\", \"2020-2023\", \"2023+\"],\n    datasets: [\n      {\n        label: \"Model Years\",\n        data: rangeCounts,\n        backgroundColor: \"#4caf50\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">Vehical Launch Year</h2>\n      <div style={{ width: \"570px\", height: \"285px\" }}>\n      <Bar data={chartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default RangeChart;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,aAAa,KAAQ,UAAU,CAC/C,OAASC,GAAG,KAAQ,iBAAiB,CAErC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACAN,KAAK,CAACO,QAAQ,CAAC,GAAGN,aAAa,CAAC,CAEhC,KAAM,CAAAO,UAAU,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAAAE,MAAM,CAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAAC,YAAY,CAAC,CAAC,CAErD;AACA,KAAM,CAAAC,IAAI,CAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,CACvD,KAAM,CAAAC,WAAW,CAAGD,IAAI,CAACF,GAAG,CAAC,CAACI,GAAG,CAAEC,KAAK,GACtCN,MAAM,CAACO,MAAM,CAAEC,KAAK,EAAK,CACvB,GAAIF,KAAK,GAAKH,IAAI,CAACM,MAAM,CAAG,CAAC,CAAE,MAAO,CAAAD,KAAK,EAAIH,GAAG,CAAE;AACpD,MAAO,CAAAG,KAAK,EAAIH,GAAG,EAAIG,KAAK,CAAGL,IAAI,CAACG,KAAK,CAAG,CAAC,CAAC,CAChD,CAAC,CAAC,CAACG,MACL,CAAC,CAED,KAAM,CAAAC,SAAS,CAAG,CAChBC,MAAM,CAAE,CAAC,WAAW,CAAE,WAAW,CAAE,WAAW,CAAE,WAAW,CAAE,WAAW,CAAE,WAAW,CAAE,OAAO,CAAC,CAC/FC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,aAAa,CACpBd,IAAI,CAAEK,WAAW,CACjBU,eAAe,CAAE,SACnB,CAAC,CAEL,CAAC,CAED,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CvB,IAAA,OAAIsB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,qBAAmB,CAAI,CAAC,cAC/DvB,IAAA,QAAKwB,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,OAAQ,CAAE,CAAAH,QAAA,cAChDvB,IAAA,CAACF,GAAG,EAACQ,IAAI,CAAEW,SAAU,CAAE,CAAC,CACnB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}