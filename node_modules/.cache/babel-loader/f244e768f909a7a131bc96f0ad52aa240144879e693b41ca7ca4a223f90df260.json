{"ast":null,"code":"var _jsxFileName = \"/home/ruchazirpe/reactproject/ev-dashboard/src/components/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filters = ({\n  data,\n  setFilteredData\n}) => {\n  _s();\n  const [selectedMake, setSelectedMake] = useState(\"\");\n  const [selectedModel, setSelectedModel] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const uniqueMakes = [...new Set(data.map(item => item.Make))];\n  const uniqueModels = [...new Set(data.map(item => item.Model))];\n  const uniqueCity = [...new Set(data.map(item => item.City))];\n  const handleMakeChange = e => {\n    const make = e.target.value;\n    setSelectedMake(make);\n    filterData(make, selectedModel);\n  };\n  const handleModelChange = e => {\n    const model = e.target.value;\n    setSelectedModel(model);\n    filterData(selectedMake, model);\n  };\n  const handleCityChange = e => {\n    const city = e.target.value;\n    setSelectedCity(city);\n    filterData(selectedCity, city);\n  };\n  const filterData = (make, model, city) => {\n    let filtered = data;\n    if (make) filtered = filtered.filter(item => item.Make === make);\n    if (model) filtered = filtered.filter(item => item.Model === model);\n    if (city) filtered = filtered.filter(item => item.City === city);\n    setFilteredData(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"make\",\n        children: \"Make\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"make\",\n        value: selectedMake,\n        onChange: handleMakeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), uniqueMakes.map(make => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: make,\n          children: make\n        }, make, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"model\",\n        children: \"Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"model\",\n        value: selectedModel,\n        onChange: handleModelChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), uniqueModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: model,\n          children: model\n        }, model, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"model\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"city\",\n        value: selectedCity,\n        onChange: handleCityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), uniqueCity.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Filters, \"/F9dBcSd+y4qFDC7nYoxecAIEeY=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Filters","data","setFilteredData","_s","selectedMake","setSelectedMake","selectedModel","setSelectedModel","selectedCity","setSelectedCity","uniqueMakes","Set","map","item","Make","uniqueModels","Model","uniqueCity","City","handleMakeChange","e","make","target","value","filterData","handleModelChange","model","handleCityChange","city","filtered","filter","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Filters.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Filters = ({ data, setFilteredData }) => {\n  const [selectedMake, setSelectedMake] = useState(\"\");\n  const [selectedModel, setSelectedModel] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState(\"\");\n\n  const uniqueMakes = [...new Set(data.map(item => item.Make))];\n  const uniqueModels = [...new Set(data.map(item => item.Model))];\n  const uniqueCity = [...new Set(data.map(item => item.City))];\n\n  const handleMakeChange = (e) => {\n    const make = e.target.value;\n    setSelectedMake(make);\n    filterData(make, selectedModel);\n  };\n\n  const handleModelChange = (e) => {\n    const model = e.target.value;\n    setSelectedModel(model);\n    filterData(selectedMake, model);\n  };\n\n  const handleCityChange = (e) => {\n    const city = e.target.value;\n    setSelectedCity(city);\n    filterData(selectedCity, city);\n  };\n\n  const filterData = (make, model,city) => {\n    let filtered = data;\n    if (make) filtered = filtered.filter(item => item.Make === make);\n    if (model) filtered = filtered.filter(item => item.Model === model);\n    if (city) filtered = filtered.filter(item => item.City === city);\n    setFilteredData(filtered);\n  };\n\n  return (\n    <div className=\"filters\">\n      <div className=\"filter-group\">\n        <label htmlFor=\"make\">Make</label>\n        <select id=\"make\" value={selectedMake} onChange={handleMakeChange}>\n          <option value=\"\">Select Make</option>\n          {uniqueMakes.map(make => (\n            <option key={make} value={make}>{make}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"filter-group\">\n        <label htmlFor=\"model\">Model</label>\n        <select id=\"model\" value={selectedModel} onChange={handleModelChange}>\n          <option value=\"\">Select Model</option>\n          {uniqueModels.map(model => (\n            <option key={model} value={model}>{model}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"filter-group\">\n        <label htmlFor=\"model\">City</label>\n        <select id=\"city\" value={selectedCity} onChange={handleCityChange}>\n          <option value=\"\">Select City</option>\n          {uniqueCity.map(city => (\n            <option key={city} value={city}>{city}</option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}