{"ast":null,"code":"// src/components/CafvEligibilityChart.js\nimport React from\"react\";import{Pie}from\"react-chartjs-2\";import{Chart as ChartJS,ArcElement,Tooltip,Legend}from\"chart.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const CafvEligibilityChart=_ref=>{let{data}=_ref;const cafvEligibilityCounts=data.reduce((acc,vehicle)=>{if(vehicle[\"Clean Alternative Fuel Vehicle (CAFV) Eligibility\"]===\"Clean Alternative Fuel Vehicle Eligible\"){acc.eligible+=1;}else if(vehicle[\"Clean Alternative Fuel Vehicle (CAFV) Eligibility\"].includes(\"unknown\")){acc.unknown+=1;}else{acc.notEligible+=1;}return acc;},{eligible:0,notEligible:0,unknown:0});const chartData={labels:[\"Eligible\",\"Not Eligible\",\"Unknown\"],datasets:[{data:[cafvEligibilityCounts.eligible,cafvEligibilityCounts.notEligible,cafvEligibilityCounts.unknown],backgroundColor:[\"#28a745\",\"#dc3545\",\"#ffc107\"]}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CAFV Eligibility\"}),/*#__PURE__*/_jsx(Pie,{data:chartData})]});};export default CafvEligibilityChart;","map":{"version":3,"names":["React","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","CafvEligibilityChart","_ref","data","cafvEligibilityCounts","reduce","acc","vehicle","eligible","includes","unknown","notEligible","chartData","labels","datasets","backgroundColor","className","children"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Charts/CafvEligibilityChart.js"],"sourcesContent":["// src/components/CafvEligibilityChart.js\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst CafvEligibilityChart = ({ data }) => {\n  const cafvEligibilityCounts = data.reduce(\n    (acc, vehicle) => {\n      if (vehicle[\"Clean Alternative Fuel Vehicle (CAFV) Eligibility\"] === \"Clean Alternative Fuel Vehicle Eligible\") {\n        acc.eligible += 1;\n      } else if (vehicle[\"Clean Alternative Fuel Vehicle (CAFV) Eligibility\"].includes(\"unknown\")) {\n        acc.unknown += 1;\n      } else {\n        acc.notEligible += 1;\n      }\n      return acc;\n    },\n    { eligible: 0, notEligible: 0, unknown: 0 }\n  );\n\n  const chartData = {\n    labels: [\"Eligible\", \"Not Eligible\", \"Unknown\"],\n    datasets: [\n      {\n        data: [cafvEligibilityCounts.eligible, cafvEligibilityCounts.notEligible, cafvEligibilityCounts.unknown],\n        backgroundColor: [\"#28a745\", \"#dc3545\", \"#ffc107\"],\n      },\n    ],\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <h3>CAFV Eligibility</h3>\n      <Pie data={chartData} />\n    </div>\n  );\n};\n\nexport default CafvEligibilityChart;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzEP,OAAO,CAACQ,QAAQ,CAACP,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE7C,KAAM,CAAAM,oBAAoB,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACpC,KAAM,CAAAE,qBAAqB,CAAGD,IAAI,CAACE,MAAM,CACvC,CAACC,GAAG,CAAEC,OAAO,GAAK,CAChB,GAAIA,OAAO,CAAC,mDAAmD,CAAC,GAAK,yCAAyC,CAAE,CAC9GD,GAAG,CAACE,QAAQ,EAAI,CAAC,CACnB,CAAC,IAAM,IAAID,OAAO,CAAC,mDAAmD,CAAC,CAACE,QAAQ,CAAC,SAAS,CAAC,CAAE,CAC3FH,GAAG,CAACI,OAAO,EAAI,CAAC,CAClB,CAAC,IAAM,CACLJ,GAAG,CAACK,WAAW,EAAI,CAAC,CACtB,CACA,MAAO,CAAAL,GAAG,CACZ,CAAC,CACD,CAAEE,QAAQ,CAAE,CAAC,CAAEG,WAAW,CAAE,CAAC,CAAED,OAAO,CAAE,CAAE,CAC5C,CAAC,CAED,KAAM,CAAAE,SAAS,CAAG,CAChBC,MAAM,CAAE,CAAC,UAAU,CAAE,cAAc,CAAE,SAAS,CAAC,CAC/CC,QAAQ,CAAE,CACR,CACEX,IAAI,CAAE,CAACC,qBAAqB,CAACI,QAAQ,CAAEJ,qBAAqB,CAACO,WAAW,CAAEP,qBAAqB,CAACM,OAAO,CAAC,CACxGK,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CACnD,CAAC,CAEL,CAAC,CAED,mBACEhB,KAAA,QAAKiB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpB,IAAA,OAAAoB,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBpB,IAAA,CAACP,GAAG,EAACa,IAAI,CAAES,SAAU,CAAE,CAAC,EACrB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}