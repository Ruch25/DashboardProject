{"ast":null,"code":"var _jsxFileName = \"/home/ruchazirpe/reactproject/ev-dashboard/src/components/Map.js\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09] // Default center\n      ,\n      zoom: 2,\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), data.map((item, index) => {\n        console.log(\"item\", item);\n        if (item.VehicleLocation) {\n          const locationParts = item.VehicleLocation.split(\" \");\n          if (locationParts.length === 2) {\n            const [lng, lat] = locationParts.map(coord => parseFloat(coord));\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: [lat, lng],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [item.Make, \" \", item.Model, \" - \", item.City, \", \", item.State]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this);\n          } else {\n            console.warn(`Invalid VehicleLocation format for ${item.Make} ${item.Model}`);\n            return null;\n          }\n        }\n        return null; // Return null if VehicleLocation is not available\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Map","data","className","children","center","zoom","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","console","log","VehicleLocation","locationParts","split","length","lng","lat","coord","parseFloat","position","Make","Model","City","State","warn","_c","$RefreshReg$"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Map.js"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\n\nconst Map = ({ data }) => {\n \n\n  return (\n    <div className=\"map-container\"> {/* Wrap MapContainer with a div */}\n     <MapContainer\n      center={[51.505, -0.09]} // Default center\n      zoom={2}\n      style={{ height: \"500px\", width: \"100%\" }}\n    >\n      {/* TileLayer for OpenStreetMap */}\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n\n      {/* Render markers only if VehicleLocation is available */}\n      {data.map((item, index) => {\n       console.log(\"item\",item)\n        if (item.VehicleLocation) {\n          const locationParts = item.VehicleLocation.split(\" \");\n          if (locationParts.length === 2) {\n            const [lng, lat] = locationParts.map((coord) => parseFloat(coord));\n            return (\n              <Marker key={index} position={[lat, lng]}>\n                <Popup>\n                  {item.Make} {item.Model} - {item.City}, {item.State}\n                </Popup>\n              </Marker>\n            );\n          } else {\n            console.warn(`Invalid VehicleLocation format for ${item.Make} ${item.Model}`);\n            return null;\n          }\n        }\n        return null; // Return null if VehicleLocation is not available\n      })}\n    </MapContainer>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvE,MAAMC,GAAG,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAGxB,oBACEF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,GAAC,GAAC,eAC/BJ,OAAA,CAACL,YAAY;MACZU,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE,CAAC;MAAA;MACzBC,IAAI,EAAE,CAAE;MACRC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAL,QAAA,gBAG1CJ,OAAA,CAACJ,SAAS;QACRc,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAyF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG,CAAC,EAGDb,IAAI,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC1BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACH,IAAI,CAAC;QACvB,IAAIA,IAAI,CAACI,eAAe,EAAE;UACxB,MAAMC,aAAa,GAAGL,IAAI,CAACI,eAAe,CAACE,KAAK,CAAC,GAAG,CAAC;UACrD,IAAID,aAAa,CAACE,MAAM,KAAK,CAAC,EAAE;YAC9B,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGJ,aAAa,CAACN,GAAG,CAAEW,KAAK,IAAKC,UAAU,CAACD,KAAK,CAAC,CAAC;YAClE,oBACE3B,OAAA,CAACH,MAAM;cAAagC,QAAQ,EAAE,CAACH,GAAG,EAAED,GAAG,CAAE;cAAArB,QAAA,eACvCJ,OAAA,CAACF,KAAK;gBAAAM,QAAA,GACHa,IAAI,CAACa,IAAI,EAAC,GAAC,EAACb,IAAI,CAACc,KAAK,EAAC,KAAG,EAACd,IAAI,CAACe,IAAI,EAAC,IAAE,EAACf,IAAI,CAACgB,KAAK;cAAA;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C;YAAC,GAHGG,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CAAC;UAEb,CAAC,MAAM;YACLI,OAAO,CAACe,IAAI,CAAC,sCAAsCjB,IAAI,CAACa,IAAI,IAAIb,IAAI,CAACc,KAAK,EAAE,CAAC;YAC7E,OAAO,IAAI;UACb;QACF;QACA,OAAO,IAAI,CAAC,CAAC;MACf,CAAC,CAAC;IAAA;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACoB,EAAA,GAxCIlC,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}