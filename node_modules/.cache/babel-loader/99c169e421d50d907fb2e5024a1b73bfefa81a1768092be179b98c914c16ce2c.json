{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import CafvEligibilityChart from\"./Charts/CafvEligibilityChart\";import ElectricRangeChart from\"./Charts/ElectricRangeChart\";import ElectricRangeLineChart from\"./Charts/ElectricRangeLineChart\";import CountryDistributionChart from\"./Charts/CountryDistributionChart\";import VehicleAttributesRadarChart from\"./Charts/VehicleAttributesRadarChart\";import RangeVsPriceChart from\"./Charts/RangeVsPriceChart\";import data from\"../data/evData.json\";// Assuming your data file is correctly placed\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[filteredData,setFilteredData]=useState(data);const[makeCounts,setMakeCounts]=useState([]);// Filter data by vehicle make\nconst filterDataByMake=make=>{const filtered=data.filter(vehicle=>vehicle.Make===make);setFilteredData(filtered);};// Count the occurrences of each make in the data (only once when the component is mounted)\nuseEffect(()=>{const counts=data.reduce((acc,vehicle)=>{acc[vehicle.Make]=acc[vehicle.Make]?acc[vehicle.Make]+1:1;return acc;},{});const makeCountArray=Object.keys(counts).map(make=>({make,count:counts[make]}));setMakeCounts(makeCountArray);},[]);// Empty dependency array ensures this effect runs only once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"filtersdas\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"filters-title\",children:\"Filter by Vehicle Make\"}),/*#__PURE__*/_jsx(\"div\",{className:\"filters-buttons flex flex-wrap justify-between gap-6 lg:gap-8 xl:gap-12\",children:makeCounts.map(_ref=>{let{make,count}=_ref;return/*#__PURE__*/_jsxs(\"button\",{className:\"filters-btn flex items-center justify-center w-40 h-16 rounded-lg text-white font-medium shadow-md transition-all transform hover:scale-105 hover:shadow-lg focus:outline-none\",onClick:()=>filterDataByMake(make),style:{backgroundColor:getColorForMake(make)},children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-semibold\",children:make}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-sm font-light\",children:[\"(\",count,\")\"]})]},make);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(CafvEligibilityChart,{data:filteredData})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(ElectricRangeChart,{data:filteredData})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(ElectricRangeLineChart,{data:filteredData})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(CountryDistributionChart,{data:filteredData})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(VehicleAttributesRadarChart,{data:filteredData})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(RangeVsPriceChart,{data:filteredData})})]})})})]});};// Function to get color for each vehicle make\nconst getColorForMake=make=>{const colors={// Example colors (add more makes if needed)\nTESLA:'#007bff',BMW:'#007bff',AUDI:'#007bff',TOYOTA:'#007bff'};return colors[make.toUpperCase()]||'#007bff';// Default to blue if no color found\n};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","CafvEligibilityChart","ElectricRangeChart","ElectricRangeLineChart","CountryDistributionChart","VehicleAttributesRadarChart","RangeVsPriceChart","data","jsx","_jsx","jsxs","_jsxs","Dashboard","filteredData","setFilteredData","makeCounts","setMakeCounts","filterDataByMake","make","filtered","filter","vehicle","Make","counts","reduce","acc","makeCountArray","Object","keys","map","count","className","children","_ref","onClick","style","backgroundColor","getColorForMake","colors","TESLA","BMW","AUDI","TOYOTA","toUpperCase"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CafvEligibilityChart from \"./Charts/CafvEligibilityChart\";\nimport ElectricRangeChart from \"./Charts/ElectricRangeChart\";\nimport ElectricRangeLineChart from \"./Charts/ElectricRangeLineChart\";\nimport CountryDistributionChart from \"./Charts/CountryDistributionChart\";\nimport VehicleAttributesRadarChart from \"./Charts/VehicleAttributesRadarChart\";\nimport RangeVsPriceChart from \"./Charts/RangeVsPriceChart\";\nimport data from \"../data/evData.json\"; // Assuming your data file is correctly placed\n\nconst Dashboard = () => {\n  const [filteredData, setFilteredData] = useState(data);\n  const [makeCounts, setMakeCounts] = useState([]);\n\n  // Filter data by vehicle make\n  const filterDataByMake = (make) => {\n    const filtered = data.filter(vehicle => vehicle.Make === make);\n    setFilteredData(filtered);\n  };\n\n  // Count the occurrences of each make in the data (only once when the component is mounted)\n  useEffect(() => {\n    const counts = data.reduce((acc, vehicle) => {\n      acc[vehicle.Make] = acc[vehicle.Make] ? acc[vehicle.Make] + 1 : 1;\n      return acc;\n    }, {});\n\n    const makeCountArray = Object.keys(counts).map((make) => ({\n      make,\n      count: counts[make],\n    }));\n\n    setMakeCounts(makeCountArray);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\">\n        <div className=\"filtersdas\">\n          <h3 className=\"filters-title\">Filter by Vehicle Make</h3>\n          <div className=\"filters-buttons flex flex-wrap justify-between gap-6 lg:gap-8 xl:gap-12\">\n            {makeCounts.map(({ make, count }) => (\n              <button\n                key={make}\n                className=\"filters-btn flex items-center justify-center w-40 h-16 rounded-lg text-white font-medium shadow-md transition-all transform hover:scale-105 hover:shadow-lg focus:outline-none\"\n                onClick={() => filterDataByMake(make)}\n                style={{ backgroundColor: getColorForMake(make) }}\n              >\n                <span className=\"text-lg font-semibold\">{make}</span>\n                <span className=\"ml-2 text-sm font-light\">({count})</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-6\">\n        <div className=\"dashboard-container\">\n          <div className=\"chart-grid\">\n            <div className=\"chart-card\">\n              <CafvEligibilityChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <ElectricRangeChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <ElectricRangeLineChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <CountryDistributionChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <VehicleAttributesRadarChart data={filteredData} />\n            </div>\n            <div className=\"chart-card\">\n              <RangeVsPriceChart data={filteredData} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Function to get color for each vehicle make\nconst getColorForMake = (make) => {\n  const colors = {\n    // Example colors (add more makes if needed)\n    TESLA: '#007bff',\n    BMW: '#007bff',\n    AUDI: '#007bff',\n    TOYOTA: '#007bff',\n  };\n\n  return colors[make.toUpperCase()] || '#007bff'; // Default to blue if no color found\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}