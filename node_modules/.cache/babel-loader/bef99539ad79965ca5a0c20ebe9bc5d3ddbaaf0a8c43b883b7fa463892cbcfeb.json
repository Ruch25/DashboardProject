{"ast":null,"code":"var _jsxFileName = \"/home/ruchazirpe/reactproject/ev-dashboard/src/components/Charts/RangeChart.js\";\nimport React from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst RangeChart = ({\n  data\n}) => {\n  const ranges = data.map(item => item[\"Model Year\"]);\n\n  // Group ranges into bins\n  const bins = [2005, 2008, 2011, 2014, 2017, 2020, 2023];\n  const rangeCounts = bins.map((bin, index) => ranges.filter(range => {\n    if (index === bins.length - 1) return range >= bin; // Last bin includes all higher values\n    return range >= bin && range < bins[index + 1];\n  }).length);\n  const chartData = {\n    labels: [\"2005-2008\", \"2008-2011\", \"2011-2014\", \"2014-2017\", \"2017-2020\", \"2020-2023\", \"2023+\"],\n    datasets: [{\n      label: \"Model Years\",\n      data: rangeCounts,\n      backgroundColor: \"#4caf50\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Vehical Launch Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"570px\",\n        height: \"285px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = RangeChart;\nexport default RangeChart;\nvar _c;\n$RefreshReg$(_c, \"RangeChart\");","map":{"version":3,"names":["React","Chart","registerables","Bar","jsxDEV","_jsxDEV","register","RangeChart","data","ranges","map","item","bins","rangeCounts","bin","index","filter","range","length","chartData","labels","datasets","label","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","_c","$RefreshReg$"],"sources":["/home/ruchazirpe/reactproject/ev-dashboard/src/components/Charts/RangeChart.js"],"sourcesContent":["import React from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\n// Register Chart.js components\nChart.register(...registerables);\n\nconst RangeChart = ({ data }) => {\n  const ranges = data.map((item) => item[\"Model Year\"]);\n\n  // Group ranges into bins\n  const bins = [ 2005, 2008, 2011, 2014, 2017, 2020,2023];\n  const rangeCounts = bins.map((bin, index) =>\n    ranges.filter((range) => {\n      if (index === bins.length - 1) return range >= bin; // Last bin includes all higher values\n      return range >= bin && range < bins[index + 1];\n    }).length\n  );\n\n  const chartData = {\n    labels: [\"2005-2008\", \"2008-2011\", \"2011-2014\", \"2014-2017\", \"2017-2020\", \"2020-2023\", \"2023+\"],\n    datasets: [\n      {\n        label: \"Model Years\",\n        data: rangeCounts,\n        backgroundColor: \"#4caf50\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">Vehical Launch Year</h2>\n      <div style={{ width: \"570px\", height: \"285px\" }}>\n      <Bar data={chartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default RangeChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAC/C,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAJ,KAAK,CAACK,QAAQ,CAAC,GAAGJ,aAAa,CAAC;AAEhC,MAAMK,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,YAAY,CAAC,CAAC;;EAErD;EACA,MAAMC,IAAI,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,IAAI,CAAC;EACvD,MAAMC,WAAW,GAAGD,IAAI,CAACF,GAAG,CAAC,CAACI,GAAG,EAAEC,KAAK,KACtCN,MAAM,CAACO,MAAM,CAAEC,KAAK,IAAK;IACvB,IAAIF,KAAK,KAAKH,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE,OAAOD,KAAK,IAAIH,GAAG,CAAC,CAAC;IACpD,OAAOG,KAAK,IAAIH,GAAG,IAAIG,KAAK,GAAGL,IAAI,CAACG,KAAK,GAAG,CAAC,CAAC;EAChD,CAAC,CAAC,CAACG,MACL,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,CAAC;IAC/FC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBd,IAAI,EAAEK,WAAW;MACjBU,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CpB,OAAA;MAAImB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DxB,OAAA;MAAKyB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAP,QAAA,eAChDpB,OAAA,CAACF,GAAG;QAACK,IAAI,EAAEW;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GA/BI1B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}